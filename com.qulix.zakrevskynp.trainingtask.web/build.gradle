group 'com.qulix.zakrevskynp.trainingtask.web'

import groovy.sql.*

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'com.bmuschko.tomcat'

configurations {
    driverJDBC
    options
}

dependencies {
    compile group: 'org.hsqldb', name: 'hsqldb', version: '2.3.4'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.0.1'
    compile group: 'javax.servlet', name: 'jstl', version: '1.2'
    driverJDBC group: 'org.hsqldb', name: 'hsqldb', version: '2.3.4'
    def tomcatVersion = '8.0.39'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

buildscript {
    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.2.4'
    }
}

tomcatRun {
    contextPath = "/"
    webDefaultXml = file("src/main/webapp/WEB-INF/web.xml")
}
tasks.withType(War) {
    destinationDir = file("build/")
    archiveName = "${project.name}.war"
}
task startServer(dependsOn: 'tomcatRun'){}

task startDatabaseServer(type: JavaExec) {
	classpath configurations.driverJDBC
    main = 'org.hsqldb.server.Server'
    args = ['-database.0', 'file:build/database/training', '-dbname.0', 'testdb']
}

URLClassLoader loader = GroovyObject.class.classLoader as URLClassLoader
configurations.driverJDBC.each {File file ->  loader.addURL(file.toURI().toURL()) }

task createDatabase {
    doLast {
        def props = [user: 'sa', password: '', allowMultiQueries: 'true'] as Properties
        def driver = 'org.hsqldb.jdbcDriver'
        def url = 'jdbc:hsqldb:hsql://localhost:9001/testdb'
        def sql = Sql.newInstance(url, props, driver)
        String sqlFilePath = 'databaseScripts/create.sql'
        String sqlString = new File(sqlFilePath).text
        sql.execute(sqlString)
        sql.close()
    }
}

task dropDatabase {
    doLast {
        def props = [user: 'sa', password: '', allowMultiQueries: 'true'] as Properties
        def driver = 'org.hsqldb.jdbcDriver'
        def url = 'jdbc:hsqldb:hsql://localhost:9001/testdb'
        def sql = Sql.newInstance(url, props, driver)
        String sqlFilePath = 'databaseScripts/drop.sql'
        String sqlString = new File(sqlFilePath).text
        sql.execute(sqlString)
        sql.close()
    }
}

task insertTestData {
    doLast {
        def props = [user: 'sa', password: '', allowMultiQueries: 'true'] as Properties
        def driver = 'org.hsqldb.jdbcDriver'
        def url = 'jdbc:hsqldb:hsql://localhost:9001/testdb'
        def sql = Sql.newInstance(url, props, driver)
        String sqlFilePath = 'databaseScripts/insertTestData.sql'
        String sqlString = new File(sqlFilePath).text
        sql.execute(sqlString)
        sql.close()
    }
}

